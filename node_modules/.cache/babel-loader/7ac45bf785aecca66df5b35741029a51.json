{"ast":null,"code":"var __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n\nimport { propsCallback } from \"./blueprint\";\nimport pick from \"./utils/pick\";\nexport function integrate() {\n  var propNames = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    propNames[_i] = arguments[_i];\n  }\n\n  return {\n    instanceCallbacks: [propsCallback(function (props) {\n      return __assign({}, props, {\n        __isolation: props.__isolation.slice(0, props.__isolation.length - 2).concat([__assign({}, props.__isolation[props.__isolation.length - 1], pick.apply(void 0, [props].concat(propNames)))])\n      });\n    })]\n  };\n}\nexport default integrate;","map":null,"metadata":{},"sourceType":"module"}