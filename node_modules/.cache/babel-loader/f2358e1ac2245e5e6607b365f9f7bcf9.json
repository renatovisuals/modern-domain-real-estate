{"ast":null,"code":"import { withProps, withHandlers, isolate, integrate } from \"reassemble\";\nimport { parseTransition } from \"../utils/parseTransition\";\nimport { parseComputedTransition } from \"../utils/parseComputedTransition\";\nimport { memoize } from \"../utils/memoize\";\nexport var withTransitionInfo = isolate(withHandlers(function () {\n  var memoized = memoize(function (node) {\n    return parseComputedTransition(getComputedStyle(node));\n  }, function (node) {\n    return node.className;\n  });\n  return {\n    parseComputedTransitionMemoized: function parseComputedTransitionMemoized() {\n      return memoized;\n    }\n  };\n}), withProps(function (_a) {\n  var style = _a.style,\n      className = _a.className,\n      transitionState = _a.transitionState,\n      getDOMNode = _a.getDOMNode,\n      parseComputedTransitionMemoized = _a.parseComputedTransitionMemoized;\n\n  if (transitionState.inTransition) {\n    var parsed = void 0;\n\n    if (style && style.transition) {\n      parsed = parseTransition(style.transition);\n    } else {\n      var node = getDOMNode();\n      node.className = className;\n      parsed = parseComputedTransitionMemoized(node);\n    }\n\n    var first = parsed[0],\n        last = parsed[1];\n    return {\n      transitionInfo: {\n        firstPropertyDelay: first.delay,\n        firstProperty: first.property,\n        lastProperty: last.property,\n        totalDuration: last.duration + last.delay\n      }\n    };\n  }\n\n  return {\n    transitionInfo: {}\n  };\n}), integrate(\"transitionInfo\"));","map":null,"metadata":{},"sourceType":"module"}