{"ast":null,"code":"var __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n\nimport * as React from \"react\";\nimport { Children } from \"react\";\nimport { combine, withProps, withHandlers, omitProps } from \"reassemble\";\nexport var withWorkaround = combine(withHandlers({\n  workaroundHandler: function workaroundHandler(_a) {\n    var firstProperty = _a.transitionInfo.firstProperty,\n        onTransitionStart = _a.onTransitionStart;\n    return function () {\n      onTransitionStart({\n        propertyName: firstProperty\n      });\n    };\n  }\n}), withProps(function (_a) {\n  var firstPropertyDelay = _a.transitionInfo.firstPropertyDelay,\n      inTransition = _a.transitionState.inTransition,\n      workaroundHandler = _a.workaroundHandler,\n      children = _a.children;\n  var workaroundProps = {\n    key: \"workaround\",\n    style: {\n      opacity: 0.9\n    }\n  };\n  var transition = \"opacity 1ms linear \" + firstPropertyDelay + \"ms\";\n\n  if (inTransition) {\n    workaroundProps.onTransitionEnd = workaroundHandler;\n    workaroundProps.style = {\n      opacity: 1.0,\n      transition: transition,\n      WebkitTransition: transition\n    };\n  }\n\n  return {\n    children: [React.createElement(\"span\", __assign({}, workaroundProps))].concat(Children.toArray(children))\n  };\n}), omitProps(\"workaroundHandler\", \"onTransitionStart\"));","map":null,"metadata":{},"sourceType":"module"}