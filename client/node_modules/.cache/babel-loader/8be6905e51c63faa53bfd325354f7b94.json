{"ast":null,"code":"import combine from \"./combine\";\nimport resolveValue from \"./utils/resolveValue\";\nexport var lazyLoadCallback = function lazyLoadCallback(callback) {\n  return {\n    kind: \"lazyLoadCallback\",\n    callback: callback\n  };\n};\nexport var propsCallback = function propsCallback(callback) {\n  return {\n    kind: \"propsCallback\",\n    callback: callback\n  };\n};\nexport var stateCallback = function stateCallback(callback) {\n  return {\n    kind: \"stateCallback\",\n    callback: callback\n  };\n};\nexport var childContextCallback = function childContextCallback(callback) {\n  return {\n    kind: \"childContextCallback\",\n    callback: callback\n  };\n};\nexport var skipCallback = function skipCallback(callback) {\n  return {\n    kind: \"skipCallback\",\n    callback: callback\n  };\n};\nexport var renderCallback = function renderCallback(callback) {\n  return {\n    kind: \"renderCallback\",\n    callback: callback\n  };\n};\nexport var componentWillMountCallback = function componentWillMountCallback(callback) {\n  return {\n    kind: \"componentWillMountCallback\",\n    callback: callback\n  };\n};\nexport var componentDidMountCallback = function componentDidMountCallback(callback) {\n  return {\n    kind: \"componentDidMountCallback\",\n    callback: callback\n  };\n};\nexport var componentWillUnmountCallback = function componentWillUnmountCallback(callback) {\n  return {\n    kind: \"componentWillUnmountCallback\",\n    callback: callback\n  };\n};\nexport var componentWillReceivePropsCallback = function componentWillReceivePropsCallback(callback) {\n  return {\n    kind: \"componentWillReceivePropsCallback\",\n    callback: callback\n  };\n};\nexport var shouldComponentUpdateCallback = function shouldComponentUpdateCallback(callback) {\n  return {\n    kind: \"shouldComponentUpdateCallback\",\n    callback: callback\n  };\n};\nexport var componentWillUpdateCallback = function componentWillUpdateCallback(callback) {\n  return {\n    kind: \"componentWillUpdateCallback\",\n    callback: callback\n  };\n};\nexport var componentDidUpdateCallback = function componentDidUpdateCallback(callback) {\n  return {\n    kind: \"componentDidUpdateCallback\",\n    callback: callback\n  };\n};\nexport function createBlueprint() {\n  var composables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    composables[_i] = arguments[_i];\n  }\n\n  var componentCallbacks = combine.apply(void 0, composables);\n  return {\n    staticCallbacks: componentCallbacks.filter(function (c) {\n      return c.staticCallback;\n    }).map(function (c) {\n      return c.staticCallback;\n    }),\n    instanceCallbacks: function instanceCallbacks() {\n      var result = [];\n      componentCallbacks.forEach(function (c) {\n        if (!c.instanceCallbacks) {\n          return;\n        }\n\n        var instanceCallbacks = resolveValue(c.instanceCallbacks);\n\n        if (!instanceCallbacks) {\n          return;\n        }\n\n        result.push.apply(result, instanceCallbacks);\n      });\n      return result;\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}