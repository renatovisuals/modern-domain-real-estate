{"ast":null,"code":"import _defineProperty from \"/Users/jamesmarsh/Documents/sites/modern-domain-real-estate/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jamesmarsh/Documents/sites/modern-domain-real-estate/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jamesmarsh/Documents/sites/modern-domain-real-estate/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jamesmarsh/Documents/sites/modern-domain-real-estate/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jamesmarsh/Documents/sites/modern-domain-real-estate/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jamesmarsh/Documents/sites/modern-domain-real-estate/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jamesmarsh/Documents/sites/modern-domain-real-estate/src/components/AgentModal/AgentModal.js\";\nimport React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport AgentContactForm from '../AgentContactForm/AgentContactForm';\nimport AgentFormSuccessPage from '../AgentFormSuccessPage/AgentFormSuccessPage';\nimport './AgentModal.scss';\n\nvar AgentModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AgentModal, _Component);\n\n  function AgentModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AgentModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AgentModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.getInitialState = function () {\n      return {\n        height: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n        transactionType: 'sell',\n        submissionFailed: false,\n        sumbmissionSuccess: false,\n        inputErrors: {\n          firstName: \"please enter a first name\",\n          lastName: \"please enter a last name\",\n          email: \"please enter a valid email\",\n          phone: null,\n          transaction: null\n        },\n        firstNameValid: false,\n        lastNameValid: false,\n        emailValid: false,\n        phoneValid: false,\n        transactionValid: false,\n        formValid: false\n      };\n    };\n\n    _this.handleUserInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        _this.validateField(name, value);\n      });\n    };\n\n    _this.handleModalClose = function () {\n      _this.setState(_this.getInitialState());\n\n      _this.props.toggleModal();\n    };\n\n    _this.setModalHeight = function (height) {\n      _this.setState({\n        height: height\n      });\n    };\n\n    _this.onFormSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.state.formValid) {\n        _this.setState(_this.getInitialState());\n\n        setTimeout(function () {\n          _this.setState({\n            submissionSuccess: true\n          });\n        }, 500);\n      } else {\n        _this.setState({\n          submissionFailed: true\n        });\n      }\n    };\n\n    _this.validateField = function (fieldName, value) {\n      var inputErrors = _this.state.inputErrors;\n      var firstNameValid = _this.state.firstNameValid;\n      var lastNameValid = _this.state.lastNameValid;\n      var emailValid = _this.state.emailValid;\n      var formValid = _this.state.formValid;\n\n      switch (fieldName) {\n        case \"firstName\":\n          firstNameValid = value.length > 0;\n          inputErrors.firstName = firstNameValid ? '' : 'enter a first name';\n          break;\n\n        case \"lastName\":\n          lastNameValid = value.length > 0;\n          inputErrors.lastName = lastNameValid ? '' : 'enter a last name';\n          break;\n\n        case \"email\":\n          emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n          inputErrors.email = emailValid ? '' : 'please enter a valid email';\n          break;\n\n        default:\n      }\n\n      if (firstNameValid && lastNameValid && emailValid) {\n        formValid = true;\n      }\n\n      _this.setState({\n        inputErrors: inputErrors,\n        lastNameValid: lastNameValid,\n        firstNameValid: firstNameValid,\n        emailValid: emailValid,\n        formValid: formValid\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AgentModal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState(this.getInitialState());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var styles = {\n        underlineStyle: {\n          borderColor: 'red'\n        }\n      };\n      return React.createElement(CSSTransition, {\n        in: this.props.appear,\n        appear: true,\n        timeout: 300,\n        unmountOnExit: true,\n        classNames: {\n          appear: 'agent-modal--appear',\n          appearActive: 'agent-modal--appear-active',\n          enter: 'agent-modal--enter',\n          enterActive: 'agent-modal--enter-active',\n          enterDone: 'agent-modal--enter-done',\n          exit: 'agent-modal--exit',\n          exitActive: 'agent-modal--exit-active',\n          exitDone: 'agent-modal--exit-done'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"agent-modal\",\n        onClick: function onClick(e) {\n          _this2.props.handleModalClick(e);\n        },\n        style: {\n          height: this.state.height + 'px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"agent-modal__ex-icon\",\n        onClick: this.handleModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \" \\u2715 \"), React.createElement(AgentContactForm, {\n        formData: this.state,\n        validate: this.validateField,\n        handleUserInput: this.handleUserInput,\n        submitForm: this.onFormSubmit,\n        agent: this.props.agent,\n        appear: !this.state.submissionSuccess,\n        setContainerHeight: this.setModalHeight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(AgentFormSuccessPage, {\n        agent: this.props.agent,\n        appear: this.state.submissionSuccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AgentModal;\n}(Component);\n\nexport default AgentModal;","map":{"version":3,"sources":["/Users/jamesmarsh/Documents/sites/modern-domain-real-estate/src/components/AgentModal/AgentModal.js"],"names":["React","Component","CSSTransition","AgentContactForm","AgentFormSuccessPage","AgentModal","state","getInitialState","height","firstName","lastName","email","phone","transactionType","submissionFailed","sumbmissionSuccess","inputErrors","transaction","firstNameValid","lastNameValid","emailValid","phoneValid","transactionValid","formValid","handleUserInput","e","name","target","value","setState","validateField","handleModalClose","props","toggleModal","setModalHeight","onFormSubmit","preventDefault","setTimeout","submissionSuccess","fieldName","length","match","styles","underlineStyle","borderColor","appear","appearActive","enter","enterActive","enterDone","exit","exitActive","exitDone","handleModalClick","agent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {CSSTransition} from 'react-transition-group';\nimport AgentContactForm from '../AgentContactForm/AgentContactForm';\nimport AgentFormSuccessPage from '../AgentFormSuccessPage/AgentFormSuccessPage';\nimport './AgentModal.scss';\n\n\nclass AgentModal extends Component {\n\n  state={\n\n  }\n\n  componentWillMount(){\n    this.setState(this.getInitialState())\n  }\n\n  getInitialState = ()=>{\n    return(\n      {\n        height:'',\n        firstName:'',\n        lastName:'',\n        email:'',\n        phone:'',\n        transactionType:'sell',\n        submissionFailed:false,\n        sumbmissionSuccess:false,\n        inputErrors:{\n          firstName:\"please enter a first name\",\n          lastName:\"please enter a last name\",\n          email:\"please enter a valid email\",\n          phone:null,\n          transaction:null\n        },\n        firstNameValid:false,\n        lastNameValid:false,\n        emailValid:false,\n        phoneValid:false,\n        transactionValid:false,\n        formValid:false\n      }\n    )\n  }\n\n  handleUserInput = (e)=>{\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n        [name]:value\n    },()=>{this.validateField(name,value)})\n  }\n\n  handleModalClose =()=>{\n    this.setState(this.getInitialState())\n    this.props.toggleModal()\n\n  }\n\n  setModalHeight = (height)=>{\n    this.setState({\n      height\n    })\n  }\n\n  onFormSubmit = (e)=>{\n  e.preventDefault();\n   if(this.state.formValid){\n     this.setState(this.getInitialState());\n     setTimeout(()=>{this.setState({submissionSuccess:true})},500)\n   }else{\n     this.setState({\n       submissionFailed:true\n     })\n   }\n  }\n\n  validateField = (fieldName,value)=>{\n    let inputErrors = this.state.inputErrors;\n    let firstNameValid = this.state.firstNameValid;\n    let lastNameValid = this.state.lastNameValid;\n    let emailValid = this.state.emailValid;\n    let formValid = this.state.formValid;\n\n    switch(fieldName) {\n      case \"firstName\":\n        firstNameValid = value.length >0;\n        inputErrors.firstName = firstNameValid ? '' : 'enter a first name';\n        break;\n      case \"lastName\":\n        lastNameValid = value.length >0;\n        inputErrors.lastName = lastNameValid ? '' : 'enter a last name';\n        break;\n      case \"email\":\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        inputErrors.email = emailValid ? '' : 'please enter a valid email';\n        break;\n      default:\n    }\n\n    if(firstNameValid && lastNameValid && emailValid){\n        formValid = true\n    }\n\n  this.setState({\n    inputErrors,\n    lastNameValid,\n    firstNameValid,\n    emailValid,\n    formValid\n  })\n\n  }\n\n  render(){\n    const styles = {\n      underlineStyle: {\n        borderColor:'red'\n      }\n    }\n    return(\n      <CSSTransition\n        in={this.props.appear}\n        appear={true}\n        timeout={300}\n        unmountOnExit={true}\n        classNames={{\n            appear:'agent-modal--appear',\n            appearActive:'agent-modal--appear-active',\n\n            enter: 'agent-modal--enter',\n            enterActive: 'agent-modal--enter-active',\n            enterDone: 'agent-modal--enter-done',\n\n            exit: 'agent-modal--exit',\n            exitActive: 'agent-modal--exit-active',\n            exitDone: 'agent-modal--exit-done'\n        }}\n      >\n        <div className = \"agent-modal\" onClick = {(e)=>{this.props.handleModalClick(e)}} style={{height:this.state.height +'px'}}>\n          <span className = \"agent-modal__ex-icon\" onClick = {this.handleModalClose}> &#10005; </span>\n            <AgentContactForm\n              formData = {this.state}\n              validate = {this.validateField}\n              handleUserInput = {this.handleUserInput}\n              submitForm = {this.onFormSubmit}\n              agent = {this.props.agent}\n              appear = {!this.state.submissionSuccess}\n              setContainerHeight = {this.setModalHeight}\n            />\n            <AgentFormSuccessPage agent ={this.props.agent} appear = {this.state.submissionSuccess}/>\n        </div>\n      </CSSTransition>\n    )\n  }\n\n}\n\nexport default AgentModal;\n"]},"metadata":{},"sourceType":"module"}