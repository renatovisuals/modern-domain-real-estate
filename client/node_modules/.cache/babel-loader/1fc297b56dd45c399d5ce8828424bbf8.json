{"ast":null,"code":"var __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n\nimport { propsCallback } from \"./blueprint\";\nimport pick from \"./utils/pick\";\nimport shallowEqual from \"./utils/shallowEqual\";\nexport function withPropsOnChange(shouldMapOrKeys, propsMapper) {\n  var shouldMap = typeof shouldMapOrKeys === \"function\" ? shouldMapOrKeys : function (props, nextProps) {\n    return !shallowEqual(pick.apply(void 0, [props].concat(shouldMapOrKeys)), pick.apply(void 0, [nextProps].concat(shouldMapOrKeys)));\n  };\n  return {\n    instanceCallbacks: function instanceCallbacks() {\n      var previousProps;\n      var computedProps;\n      return [propsCallback(function (props) {\n        if (previousProps === undefined || shouldMap(previousProps, props)) {\n          computedProps = propsMapper(props);\n        }\n\n        previousProps = props;\n        return __assign({}, props, computedProps);\n      })];\n    }\n  };\n}\nexport default withPropsOnChange;","map":null,"metadata":{},"sourceType":"module"}